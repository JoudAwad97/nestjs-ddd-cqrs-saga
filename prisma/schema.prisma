// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  first_name String
  last_name  String
  nick_name  String?
  password   String
  email      String     @unique
  status     UserStatus // Assuming 'Status' is an enum
  role       UserRole // Assuming 'UserRole' is an enum
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model Post {
  id         String     @id @default(uuid())
  author_id  String
  title      String
  content    String
  status     PostStatus // Assuming 'PostStatus' is an enum
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model Author {
  id         String    @id @default(uuid())
  first_name String
  last_name  String
  nick_name  String?
  user_id    String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  version    Int       @default(0)
  comments   Comment[]
}

model Comment {
  id         String   @id @default(uuid())
  author_id  String
  post_id    String
  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       Author   @relation(fields: [author_id], references: [user_id], onDelete: Cascade)
}

// Enum definitions (you will need to define these based on your requirements)
enum UserStatus {
  ACTIVE
  INACTIVE
}

enum UserRole {
  ADMIN
  USER
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
